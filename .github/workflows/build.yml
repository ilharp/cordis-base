name: Build Image

on:
  push:
    paths:
      - .github/workflows/build.yml
      - build.sh
      - Dockerfile
  pull_request:
  workflow_dispatch:

jobs:
  build:
    name: build

    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Prepare Tag
        id: tag
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          VERSION="${GITHUB_REF##refs/tags/}"
          echo "Found Tag: ${VERSION}"
          echo "version=${VERSION}" >> $GITHUB_OUTPUT
        shell: bash

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        if: github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/tags/')
        uses: docker/login-action@v2
        with:
          username: ilharp
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Login to GitHub Container Registry
        if: github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/tags/')
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ilharp
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build
        if: github.ref != 'refs/heads/master' && !startsWith(github.ref, 'refs/tags/')
        env:
          BUILD_DOCKER_BUILDER: ${{ steps.buildx.outputs.name }}
        run: |
          ./build.sh
        shell: bash

      - name: Push Commit
        if: github.ref == 'refs/heads/master' && !startsWith(github.ref, 'refs/tags/')
        env:
          BUILD_DOCKER_BUILDER: ${{ steps.buildx.outputs.name }}
        run: |
          ./build.sh push
        shell: bash

      - name: Push Tags
        if: startsWith(github.ref, 'refs/tags/')
        env:
          BUILD_DOCKER_BUILDER: ${{ steps.buildx.outputs.name }}
          BUILD_TAG: ${{ steps.tag.outputs.version }}
        run: |
          ./build.sh push
        shell: bash
